/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyMetadata } from "../../../internal/utils";
import { classToPlain, Expose } from "class-transformer";

export class UserRefreshErrorResponse extends Error {
    @SpeakeasyMetadata()
    @Expose({ name: "error" })
    error: string;

    @SpeakeasyMetadata()
    @Expose({ name: "failed_sources" })
    failedSources?: string[];

    /**
     * Whether operation was successful or not
     */
    @SpeakeasyMetadata()
    @Expose({ name: "success" })
    success: boolean;

    /**
     * A unique ID representing the end user. Typically this will be a user ID from your application. Personally identifiable information, such as an email address or phone number, should not be used in the client_user_id.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "user_id" })
    userId: string;

    constructor(err?: UserRefreshErrorResponse) {
        super();
        if (err) {
            Object.assign(this, err);
            this.message = JSON.stringify(
                classToPlain(err, { exposeUnsetFields: false, excludeExtraneousValues: true })
            );
        }

        this.name = "UserRefreshErrorResponse";
        Object.setPrototypeOf(this, UserRefreshErrorResponse.prototype);
    }
}
