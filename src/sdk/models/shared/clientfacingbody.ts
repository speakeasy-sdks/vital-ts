/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RFCDate } from "../../../sdk/types";
import { ClientFacingSource } from "./clientfacingsource";
import { Expose, Transform, Type } from "class-transformer";

export class ClientFacingBody extends SpeakeasyBase {
    /**
     * Date of the summary in the YYYY-mm-dd format.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "calendar_date" })
    @Type(() => String)
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    calendarDate: RFCDate;

    /**
     * Date of the specified record, formatted as ISO8601 datetime string in UTC 00:00. Deprecated in favour of calendar_date.
     *
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    date: Date;

    /**
     * Body fat percentage::perc
     */
    @SpeakeasyMetadata()
    @Expose({ name: "fat" })
    fat?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * Source summarizes where a sample or a summary is sourced from.
     *
     * @remarks
     * At minimum, the source provider is always included.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "source" })
    @Type(() => ClientFacingSource)
    source: ClientFacingSource;

    /**
     * User id returned by vital create user request. This id should be stored in your database against the user and used for all interactions with the vital api.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "user_id" })
    userId: string;

    /**
     * Weight in kg::kg
     */
    @SpeakeasyMetadata()
    @Expose({ name: "weight" })
    weight?: number;
}
