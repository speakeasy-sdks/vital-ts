/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ClientFacingLab } from "./clientfacinglab";
import { ClientFacingMarker } from "./clientfacingmarker";
import { LabTestCollectionMethod } from "./labtestcollectionmethod";
import { LabTestSampleType } from "./labtestsampletype";
import { Expose, Type } from "class-transformer";

export class ClientFacingLabTest extends SpeakeasyBase {
    /**
     * Defines whether a lab test requires fasting. Only available for Labcorp.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "fasting" })
    fasting?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    @SpeakeasyMetadata()
    @Expose({ name: "is_active" })
    isActive: boolean;

    /**
     * Denotes whether a lab test requires using non-Vital physician networks. If it does then it's delegated - no otherwise.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "is_delegated" })
    isDelegated?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "lab" })
    @Type(() => ClientFacingLab)
    lab?: ClientFacingLab;

    @SpeakeasyMetadata({ elemType: ClientFacingMarker })
    @Expose({ name: "markers" })
    @Type(() => ClientFacingMarker)
    markers?: ClientFacingMarker[];

    /**
     * The method used to perform a lab test.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "method" })
    method: LabTestCollectionMethod;

    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    @SpeakeasyMetadata()
    @Expose({ name: "price" })
    price: number;

    /**
     * The type of sample used to perform a lab test.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "sample_type" })
    sampleType: LabTestSampleType;

    @SpeakeasyMetadata()
    @Expose({ name: "slug" })
    slug: string;
}
