/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class TimeSlot extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "booking_key" })
    bookingKey?: string;

    /**
     * Time is in UTC
     */
    @SpeakeasyMetadata()
    @Expose({ name: "end" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    end: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "expires_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    expiresAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "is_priority" })
    isPriority: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "num_appointments_available" })
    numAppointmentsAvailable: number;

    @SpeakeasyMetadata()
    @Expose({ name: "price" })
    price: number;

    /**
     * Time is in UTC
     */
    @SpeakeasyMetadata()
    @Expose({ name: "start" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    start: Date;
}
