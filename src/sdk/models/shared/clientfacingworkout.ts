/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RFCDate } from "../../../sdk/types";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Map of workouts encoded as polyline
 */
export class Map extends SpeakeasyBase {}

/**
 * Source the data has come from.
 */
export class ClientFacingWorkoutSource extends SpeakeasyBase {
    /**
     * The identifier of the app which recorded this summary. This is only applicable to multi-source providers like Apple Health and Android Health Connect.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "app_id" })
    appId?: string;

    /**
     * Deprecated.
     *
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "logo" })
    logo: string;

    /**
     * Deprecated.
     *
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    /**
     * Provider slug. e.g., `oura`, `fitbit`, `garmin`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "provider" })
    provider: string;

    /**
     * Deprecated.
     *
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "slug" })
    slug: string;

    /**
     * The type of the data source (app or device) by which the summary or the timeseries data were recorded. This defaults to `unknown` when Vital cannot extract or infer that information
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: string;
}

/**
 * Sport's name
 */
export class Sport extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: number;

    /**
     * Sport's name
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name: string;

    /**
     * Slug for designated sport
     */
    @SpeakeasyMetadata()
    @Expose({ name: "slug" })
    slug: string;
}

export class ClientFacingWorkout extends SpeakeasyBase {
    /**
     * Average heart rate during workout::bpm
     */
    @SpeakeasyMetadata()
    @Expose({ name: "average_hr" })
    averageHr?: number;

    /**
     * Average speed during workout in m/s::meters/sec
     */
    @SpeakeasyMetadata()
    @Expose({ name: "average_speed" })
    averageSpeed?: number;

    /**
     * Average watts burned during exercise::watts
     */
    @SpeakeasyMetadata()
    @Expose({ name: "average_watts" })
    averageWatts?: number;

    /**
     * Date of the workout summary in the YYYY-mm-dd format. This generally matches the workout start date.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "calendar_date" })
    @Type(() => String)
    @Transform(({ value }) => new RFCDate(value), { toClassOnly: true })
    calendarDate: RFCDate;

    /**
     * Calories burned during the workout::kCal
     */
    @SpeakeasyMetadata()
    @Expose({ name: "calories" })
    calories?: number;

    /**
     * Watts burned during exercise::watts
     */
    @SpeakeasyMetadata()
    @Expose({ name: "device_watts" })
    deviceWatts?: number;

    /**
     * Distance travelled during workout::meters
     */
    @SpeakeasyMetadata()
    @Expose({ name: "distance" })
    distance?: number;

    /**
     * Highest point of elevation::meters
     */
    @SpeakeasyMetadata()
    @Expose({ name: "elev_high" })
    elevHigh?: number;

    /**
     * Lowest point of elevation::meters
     */
    @SpeakeasyMetadata()
    @Expose({ name: "elev_low" })
    elevLow?: number;

    /**
     * Time in seconds spent in different heart rate zones <50%, 50-60%, 60-70%, 70-80%, 80-90%, 90%+. Due to rounding errors, it's possible that summing all values is different than the total time of the workout. Not available for all providers::seconds
     */
    @SpeakeasyMetadata()
    @Expose({ name: "hr_zones" })
    hrZones?: number[];

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * Map of workouts encoded as polyline
     */
    @SpeakeasyMetadata()
    @Expose({ name: "map" })
    @Type(() => Map)
    map?: Map;

    /**
     * Max heart rate during workout::bpm
     */
    @SpeakeasyMetadata()
    @Expose({ name: "max_hr" })
    maxHr?: number;

    /**
     * Max speed during workout in m/s::meters/sec
     */
    @SpeakeasyMetadata()
    @Expose({ name: "max_speed" })
    maxSpeed?: number;

    /**
     * Max watts burned during exercise::watts
     */
    @SpeakeasyMetadata()
    @Expose({ name: "max_watts" })
    maxWatts?: number;

    /**
     * Time spent active during the workout::seconds
     */
    @SpeakeasyMetadata()
    @Expose({ name: "moving_time" })
    movingTime?: number;

    /**
     * Provider ID given for that specific workout
     */
    @SpeakeasyMetadata()
    @Expose({ name: "provider_id" })
    providerId: string;

    /**
     * Source the data has come from.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "source" })
    @Type(() => ClientFacingWorkoutSource)
    source: ClientFacingWorkoutSource;

    /**
     * Sport's name
     */
    @SpeakeasyMetadata()
    @Expose({ name: "sport" })
    @Type(() => Sport)
    sport?: Sport;

    /**
     * End time of the workout::time
     */
    @SpeakeasyMetadata()
    @Expose({ name: "time_end" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    timeEnd: Date;

    /**
     * Start time of the workout::time
     */
    @SpeakeasyMetadata()
    @Expose({ name: "time_start" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    timeStart: Date;

    /**
     * Timezone offset from UTC as seconds. For example, EEST (Eastern European Summer Time, +3h) is 10800. PST (Pacific Standard Time, -8h) is -28800::seconds
     */
    @SpeakeasyMetadata()
    @Expose({ name: "timezone_offset" })
    timezoneOffset?: number;

    /**
     * Title given for the workout
     */
    @SpeakeasyMetadata()
    @Expose({ name: "title" })
    title?: string;

    /**
     * Elevation gain during the workout::meters
     */
    @SpeakeasyMetadata()
    @Expose({ name: "total_elevation_gain" })
    totalElevationGain?: number;

    /**
     * User id returned by vital create user request. This id should be stored in your database against the user and used for all interactions with the vital api.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "user_id" })
    userId: string;

    /**
     * Weighted average watts burned during exercise::watts
     */
    @SpeakeasyMetadata()
    @Expose({ name: "weighted_average_watts" })
    weightedAverageWatts?: number;
}
