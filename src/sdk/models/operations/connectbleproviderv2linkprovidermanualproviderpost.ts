/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";

/**
 * An enumeration.
 */
export enum ManualProviders {
    BeurerBle = "beurer_ble",
    OmronBle = "omron_ble",
    AccuchekBle = "accuchek_ble",
    ContourBle = "contour_ble",
    FreestyleLibreBle = "freestyle_libre_ble",
    OnetouchBle = "onetouch_ble",
    AppleHealthKit = "apple_health_kit",
    Manual = "manual",
    HealthConnect = "health_connect",
}

export class ConnectBleProviderV2LinkProviderManualProviderPostRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    manualConnectionData: shared.ManualConnectionData;

    /**
     * An enumeration.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=provider" })
    provider: ManualProviders;
}

export class ConnectBleProviderV2LinkProviderManualProviderPostResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * Successful Response
     */
    @SpeakeasyMetadata()
    responseConnectBleProviderV2LinkProviderManualProviderPost?: Record<string, boolean>;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
