/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * An enumeration.
 */
export enum ConnectIndividualProviderV2LinkProviderPasswordProviderPostProviderPasswordProviders {
    Whoop = "whoop",
    Renpho = "renpho",
    Peloton = "peloton",
    Zwift = "zwift",
    EightSleep = "eight_sleep",
    BeurerApi = "beurer_api",
    Dexcom = "dexcom",
    Hammerhead = "hammerhead",
    MyFitnessPal = "my_fitness_pal",
}

export class ConnectIndividualProviderV2LinkProviderPasswordProviderPostRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    individualProviderData: shared.IndividualProviderData;

    /**
     * An enumeration.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=provider" })
    provider: ConnectIndividualProviderV2LinkProviderPasswordProviderPostProviderPasswordProviders;

    @SpeakeasyMetadata({
        data: "header, style=simple;explode=false;name=x-vital-link-client-region",
    })
    xVitalLinkClientRegion?: string;
}

export class ConnectIndividualProviderV2LinkProviderPasswordProviderPostResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * Successful Response
     */
    @SpeakeasyMetadata()
    providerLinkResponse?: shared.ProviderLinkResponse;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
